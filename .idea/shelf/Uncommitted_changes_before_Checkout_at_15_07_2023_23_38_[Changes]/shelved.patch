Index: hw-16/js/script.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\n (function (){\r\n     const inputNumber = prompt(\"Please enter number\")\r\n     const inputPow = +prompt(\"Please enter number\")\r\n\r\n      function toPowerNumber(number, pow=1 ) {\r\n          if (isNaN(number) || number === null || number === \"\") {\r\n              alert(\"Number is not correct\")\r\n              return \"Function was terminated due to not correct \"\r\n          }\r\n          if (isNaN(pow) || pow === null || pow == \"\") {\r\n              alert(\"Pow is not correct\")\r\n              return\r\n          }\r\n          const production = Number(number) ** Number(pow)\r\n          return production\r\n      }\r\n\r\n console.log(toPowerNumber(inputNumber,inputPow))\r\n\r\n }) ()\r\n\r\n
===================================================================
diff --git a/hw-16/js/script.js b/hw-16/js/script.js
--- a/hw-16/js/script.js	
+++ b/hw-16/js/script.js	
@@ -1,22 +1,22 @@
-
- (function (){
-     const inputNumber = prompt("Please enter number")
-     const inputPow = +prompt("Please enter number")
+(function () {
+    const inputNumber = prompt("Please enter number")
+    const inputPow = +prompt("Please enter number")
 
-      function toPowerNumber(number, pow=1 ) {
-          if (isNaN(number) || number === null || number === "") {
-              alert("Number is not correct")
-              return "Function was terminated due to not correct "
-          }
-          if (isNaN(pow) || pow === null || pow == "") {
-              alert("Pow is not correct")
-              return
-          }
-          const production = Number(number) ** Number(pow)
-          return production
-      }
+
+    function toPowerNumber(number, pow = 1) {
+        if (isNaN(number) || number === null || number === "") {
+            alert("Number is not correct")
+            return "Function was terminated due to not correct "
+        }
+        if (isNaN(pow) || pow === null || pow == "") {
+            alert("Pow is not correct")
+            return
+        }
+        const production = Number(number) ** Number(pow)
+        return production
+    }
 
- console.log(toPowerNumber(inputNumber,inputPow))
+    console.log(toPowerNumber(inputNumber, inputPow))
 
- }) ()
+})()
 
